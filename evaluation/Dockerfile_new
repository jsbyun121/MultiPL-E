FROM ubuntu:22.04
ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=Etc/UTC

# --- START MODIFICATION: Package list updated for 5 languages ---
# Removed: racket, ocaml-interp, ocaml, r-base, lua5.3, lua-unit
# Added: luarocks (for Lua), software-properties-common (for R/OCaml PPAs)
RUN apt-get update -yq && apt-get install -yq --fix-missing \
    curl build-essential python3-pip python3-tqdm \
    default-jdk-headless \
    golang-go \
    php-cli \
    ruby \
    rustc \
    scala \
    ghc \
    libtest-deep-perl \
    wget \
    aspnetcore-runtime-6.0 \
    luarocks \
    software-properties-common

# The following were in the original file as separate commands and are kept that way
RUN apt-get install -yqq libtest-deep-perl
RUN apt-get install -yqq wget
# --- END MODIFICATION ---

# JS/TS
RUN curl -fsSL https://deb.nodesource.com/setup_current.x | bash -
RUN apt-get install -y nodejs
RUN npm install -g typescript

# Dlang
RUN wget https://netcologne.dl.sourceforge.net/project/d-apt/files/d-apt.list -O /etc/apt/sources.list.d/d-apt.list
RUN apt-get update --allow-insecure-repositories
RUN apt-get -y --allow-unauthenticated install --reinstall d-apt-keyring
RUN apt-get update && apt-get install -yqq dmd-compiler dub

# C#
RUN apt install gnupg ca-certificates
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
RUN echo "deb https://download.mono-project.com/repo/ubuntu stable-focal main" | tee /etc/apt/sources.list.d/mono-official-stable.list
RUN apt update --allow-insecure-repositories
RUN apt install -yqq mono-devel

# F#
# RUN apt-get install -y dotnet6

# --- START MODIFICATION: New installation logic for R, Racket, OCaml, Lua ---

# R (Updated Version)
# Use the official CRAN repository to get a more recent version of R
RUN wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter-key.asc | tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc && \
    add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/" && \
    apt-get update && apt-get install -yqq r-base

# Racket (Updated Version)
# Use the official installer script, which is the recommended method
RUN wget -nv https://download.racket-lang.org/installers/8.12/racket-8.12-x86_64-linux-cs.sh -O racket-installer.sh && \
    bash racket-installer.sh --in-place --dest /usr/local && \
    rm racket-installer.sh
ENV PATH="/usr/local/bin:${PATH}"

# OCaml (Updated Version)
# Use OPAM, the OCaml package manager, for a modern and flexible installation
RUN add-apt-repository ppa:avsm/ppa -y && \
    apt-get update && apt-get install -yqq opam && \
    opam init --disable-sandboxing --bare && \
    opam switch create 5.1.1 && \
    rm -rf /var/lib/apt/lists/*
ENV PATH="/root/.opam/5.1.1/bin:${PATH}"

# Lua (FIXED)
# Install a recent Lua version and use the luarocks package manager for libraries
RUN apt-get update && apt-get install -yqq lua5.4 && rm -rf /var/lib/apt/lists/*
RUN luarocks install luaunit

# --- END MODIFICATION ---

# Post-processing

# --- START MODIFICATION: Julia installation FIX ---
# FIX: Using a robust method that preserves execute permissions, solving the PermissionError.
# This replaces the original Julia installation block completely.
ARG JULIA_VERSION=1.10.0
RUN mkdir -p /opt/julia && \
    wget -nv "https://julialang-s3.julialang.org/bin/linux/x64/${JULIA_VERSION%.*}/julia-${JULIA_VERSION}-linux-x86_64.tar.gz" -O /tmp/julia.tar.gz && \
    tar -xzf /tmp/julia.tar.gz -C /opt/julia --strip-components=1 && \
    rm /tmp/julia.tar.gz
ENV PATH="/opt/julia/bin:${PATH}"
# --- END MODIFICATION ---

# Swift (Unchanged from original)
RUN curl https://download.swift.org/swift-5.7-release/ubuntu2204/swift-5.7-RELEASE/swift-5.7-RELEASE-ubuntu22.04.tar.gz | tar xz
ENV PATH="/swift-5.7-RELEASE-ubuntu22.04/usr/bin:${PATH}"
# Javatuples
RUN mkdir /usr/multiple && wget https://repo.mavenlibs.com/maven/org/javatuples/javatuples/1.2/javatuples-1.2.jar -O /usr/multiple/javatuples-1.2.jar

# Luau
RUN wget https://github.com/Roblox/luau/releases/download/0.594/luau-ubuntu.zip -O /tmp/luau.zip && unzip /tmp/luau.zip -d /bin/

# Elixir
# Install Erlang
RUN mkdir -p /erlang && \
    cd /erlang && \
    wget -nv -O erlang.tar.gz https://builds.hex.pm/builds/otp/ubuntu-22.04/OTP-27.0.tar.gz && \
    tar xzf erlang.tar.gz --strip-components=1 && \
    ./Install -minimal "$(pwd)"

# Erlang runtime dependencies, see https://github.com/hexpm/bob/blob/4fe43eb9853bb95dbfe276957bd7d3f931a451b3/priv/scripts/docker/erlang-ubuntu-jammy.dockerfile
RUN apt-get update && \
    apt-get -y --no-install-recommends install \
    ca-certificates \
    libodbc1 \
    libssl3 \
    libsctp1

# Install Elixir
RUN mkdir -p /elixir && \
    cd /elixir && \
    wget -nv -O elixir.zip https://builds.hex.pm/builds/elixir/v1.17.2-otp-27.zip && \
    unzip -q elixir.zip

ENV PATH="/erlang/bin:/elixir/bin:${PATH}"
ENV LANG=C.UTF-8

# Dafny
# https://github.com/dafny-lang/dafny/releases/download/v4.3.0/dafny-4.3.0-x64-ubuntu-20.04.zip
# RUN mkdir -p /root/dafny
# RUN wget https://github.com/dafny-lang/dafny/releases/download/v4.3.0/dafny-4.3.0-x64-ubuntu-20.04.zip -O /tmp/dafny.zip && unzip /tmp/dafny.zip -d /root/dafny/ && ln -s /root/dafny/dafny/dafny /bin/dafny

# Clojure - https://clojure.org/guides/install_clojure#_linux_instructions
RUN curl -L -O https://github.com/clojure/brew-install/releases/latest/download/linux-install.sh
RUN chmod +x linux-install.sh
RUN ./linux-install.sh --prefix /clojure
ENV PATH="/clojure/bin:${PATH}"
RUN clojure -P

# Coq
# RUN apt-get install -yqq coq

# Lean
# RUN wget https://github.com/leanprover/lean4/releases/download/v4.6.0-rc1/lean-4.6.0-rc1-linux.zip -O /tmp/lean.zip && unzip /tmp/lean.zip -d /root/lean/ && ln -s /root/lean/bin/lean /bin/lean

# install numpy for humanevalplus
RUN python3 -m pip install numpy

COPY src /code
WORKDIR /code
ENTRYPOINT ["python3", "main.py"]