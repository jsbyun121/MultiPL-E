"""
RAG query database for code generation.
Contains predefined queries that can be used for RAG retrieval.
"""

# Your exact queries from the original file
QUERIES = [
    "variable and constant declaration (mutable vs immutable)",
    "comment syntax (single and multi-line)",
    "string concatenation operator",
    "string interpolation",
    "equality operators (value vs reference)",
    "integer division operator",
    "exponentiation operator",
    "print to console",
    "read user input",
    "logical operators (AND, OR) with short-circuiting",
    "get a variable's type",
    "create integer list",
    "get list length",
    "access first and last list elements",
    "slice a list",
    "add and remove list elements",
    "concatenate two lists",
    "create a 2D matrix",
    "access matrix element (row, column)",
    "create a number range",
    "check if element is in a list",
    "create string-to-integer dictionary",
    "add key-value pair to dictionary",
    "get value by key",
    "handle missing key in lookup",
    "get all keys and values from a dictionary",
    "iterate over dictionary key-value pairs",
    "create a tuple",
    "set operations (create, add, union)",
    "define a struct with named fields",
    "create a data frame from vectors",
    "if-elseif-else statement",
    "conditional expression for assignment",
    "for loop over a number range",
    "for loop over list elements",
    "loop with both index and value",
    "while loop",
    "loop control statements (break and continue)",
    "pattern matching statement",
    "exception handling (try, catch, finally, raise)",
    "define a function with arguments",
    "function type annotations",
    "function with optional or keyword arguments",
    "return multiple values from a function",
    "define and assign an anonymous function (lambda)",
    "recursive function",
    "tail-recursive function",
    "pass function as an argument",
    "variable scope (global vs local)",
    "create a closure",
    "map a function over a list",
    "filter a list with a function",
    "reduce (fold) a list",
    "sort list of objects by a field",
    "multiple dispatch on argument types",
    "dot syntax for function broadcasting",
    "matrix multiplication vs element-wise",
    "define algebraic data type (variant)",
    "use 'option' type for null safety",
    "'let' vs 'let rec' for functions",
    "assignment: '<-' vs '='",
    "vectorized operation vs for loop",
    "non-standard evaluation (NSE)",
    "'let' vs 'let*' vs 'letrec'",
    "comparison: 'eq?' vs 'eqv?' vs 'equal?'",
    "add a contract to a function",
    "using tables as arrays and dictionaries",
    "set a metatable for a table",
    "overload '+' operator with '__add'",
    "import code from another file",
    "reading files (entire content vs line by line)",
    "writing and appending to files",
    "list files in a directory"
]